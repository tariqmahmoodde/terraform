name: Terraform Apply on PR

on:
  pull_request_review:
    types: [submitted]

jobs:
  terraform-apply:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v39
        with:
          files: |
            **/*.tf
            **/*.tfvars

      - name: Terraform Init and Apply
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Get unique directories containing changed files
          DIRS=$(for file in ${{ steps.changed-files.outputs.all_changed_files }}; do dirname "$file"; done | sort -u)
          
          for dir in $DIRS; do
            if [ -d "$dir" ]; then
              echo "Processing directory: $dir"
              cd "$dir" || continue
              
              # Initialize Terraform
              terraform init

              # Get all workspaces, cleaning up the output
              WORKSPACES=$(terraform workspace list | sed 's/*//g' | tr -d ' ' | grep -v '^$')

              # Add default workspace to the list
              WORKSPACES="default $WORKSPACES"

              for workspace in $WORKSPACES; do
                echo "Applying changes in workspace: $workspace"
                if [ "$workspace" != "default" ]; then
                  terraform workspace select "$workspace"
                fi
                
                # Run terraform apply
                terraform apply -auto-approve
              done
              
              cd "$GITHUB_WORKSPACE"
            else
              echo "Skipping non-existent directory: $dir"
            fi
          done

      - name: Comment Result
        uses: peter-evans/create-or-update-comment@v2
        if: always()
        with:
          token: ${{ github.token }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Terraform Apply Result
            - **Status**: ${{ job.status == 'success' && ' Success' || ' Failed' }}
            - **Details**: Changes have been applied to all affected workspaces.
