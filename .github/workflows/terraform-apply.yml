name: Terraform Apply on PR

on:
  pull_request_review:
    types: [submitted] # Trigger when a PR review is submitted

jobs:
  get-artifacts:
    runs-on: ubuntu-latest
    outputs:
      artifacts: ${{ steps.get-artifacts.outputs.artifacts }}
    steps:
      - name: List Artifacts for Current Commit
        id: get-artifacts
        run: |
          # Fetch the artifacts for the current commit
          artifacts=$(gh api -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            repos/${{ github.repository }}/actions/artifacts | jq -c '[.artifacts[] | select(.workflow_run.head_sha == "${{ github.event.pull_request.head.sha }}")]')
          echo "Extracted artifacts for the current commit: $artifacts"
          echo "artifacts=$artifacts" >> $GITHUB_OUTPUT

  check-review-approval:
    runs-on: ubuntu-latest
    if: ${{ github.event.review.state == 'approved' }}  # Run only if the PR is approved
    needs: get-artifacts
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

  terraform-apply:
    needs: check-review-approval
    if: ${{ needs.get-artifacts.outputs.artifacts != '[]' }} # Run only if there are artifacts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        artifact: ${{ fromJson(needs.get-artifacts.outputs.artifacts) }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifact
        run: |
          # Download the artifact for this matrix item
          artifact_name=${{ matrix.artifact.name }}
          echo "Downloading artifact: $artifact_name"
          gh api -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            repos/${{ github.repository }}/actions/artifacts/${{ matrix.artifact.id }}/zip \
            > artifact.zip
          unzip artifact.zip -d workspace

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Extract Directory and Workspace
        id: parse-artifact
        run: |
          artifact_name=${{ matrix.artifact.name }}
          # Extract directory and workspace from artifact name
          dir=$(echo "$artifact_name" | sed -E 's/^.*-([^/]+)-plan$/\1/')
          workspace="prod" # Hardcoded as per the artifact name
          echo "Working Directory: $dir"
          echo "Workspace: $workspace"
          echo "dir=$dir" >> $GITHUB_ENV
          echo "workspace=$workspace" >> $GITHUB_ENV

      - name: Terraform Init
        working-directory: workspace/${{ env.dir }}
        run: terraform init

      - name: Select Workspace
        working-directory: workspace/${{ env.dir }}
        run: terraform workspace select ${{ env.workspace }}

      - name: Terraform Apply
        working-directory: workspace/${{ env.dir }}
        shell: bash
        run: |
          terraform apply -no-color tfplan